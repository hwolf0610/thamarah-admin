{"version":3,"sources":["./src/app/notification-list/notification-list.component.ts","./src/app/notification-list/notification-list.component.html","./src/app/notification-list/notification-list.module.ts"],"names":[],"mappings":"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","file":"notification-list-notification-list-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NotificationService } from \"./notification.service\";\nimport { Router } from '@angular/router';\n\nexport interface NotificationListModel {\n\tcreatedAt: string;\n\tisRead: boolean;\n\tnotifyType: string;\n\torderID: string;\n\torderId: string;\n\ttitle: string;\n\t_id: string;\n}\n\n@Component({\n\tselector: 'app-notification-list',\n\ttemplateUrl: './notification-list.component.html',\n\tstyleUrls: ['./notification-list.component.css']\n})\nexport class NotificationListComponent implements OnInit {\n\tpublic notificationList: Array<NotificationListModel> = [];\t\t\t// contains list of notifications\n\tpublic page: number = 1;\t\t// contains default page number\n\tpublic limit: number = 25;\t\t// shows 25 records per page\n\tpublic total: number = 0;\t\t\t// contains total number of records\n\n\tconstructor(\n\t\tprivate notificationService: NotificationService,\n\t\tprivate router: Router,\n\t\t) {\n\t\tthis.getNotificationList();\n\t}\n\n\t// get's notification list\n\tprivate getNotificationList(): void {\n\t\tthis.notificationService.getNotificationList(this.page, this.limit).subscribe((res: any) => {\n\t\t\tthis.notificationList = res.response_code = 200 ? res.response_data : [];\n\t\t\tthis.total = res.response_code = 200 ? res.total : 0;\n\t\t});\n\t}\n\n\t// called when page number is changed\n\tpublic pageChanged(page: number): void {\n\t\tthis.page = page;\n\t\tthis.getNotificationList();\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\tpublic viewOrder(notify) {\n\t\tthis.notificationService.readNotification(notify._id).subscribe(() => {\n\t\t\tthis.notificationService.emitNotificationEvent(true);\n\t\t});\n\t\tthis.router.navigate([\"/orders/view-order/\", notify.orderId]);\n\t}\n\n}\n","<div class=\"row\">\n    <div class=\"col text-primary\">\n        <h2>{{\"NOTIFICATIONS\" | translate}}</h2>\n    </div>\n</div>\n\n<!--table starts-->\n<section id=\"ng-tables\">\n    <div class=\"row text-left\">\n        <div class=\"col-12\">\n            <div class=\"card\">\n                <div class=\"card-content\">\n                    <div class=\"card-body\">\n                        <form>\n                            <section id=\"striped-light\">\n                                <div class=\"row text-left\">\n                                    <div class=\"col-sm-12\">\n                                        <div class=\"card\">\n                                            <div class=\"card-content\">\n                                                <div class=\"card-body\">\n                                                    <table class=\"table table-striped\">\n                                                        <thead>\n                                                        <tr>\n                                                            <th>{{\"TITLE\" | translate}}</th>\n                                                            <!-- <th>{{\"NOTIFICATION_TYPE\" | translate}}</th> -->\n                                                            <th>{{\"ORDER_ID\" | translate}}</th>\n                                                            <th>{{\"NOTIFICATION_DATE\" | translate}}</th>\n                                                            <th>{{\"VIEW\" | translate}}</th>\n                                                        </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                        <tr *ngFor=\"let notification of notificationList | paginate:{itemsPerPage:limit,currentPage:page,totalItems:total}\">\n                                                            <td>{{notification.title}}</td>\n                                                            <!-- <td>{{notification.notifyType}}</td> -->\n                                                            <td>{{notification.orderID}}</td>\n                                                            <td>{{notification.createdAt | date}}</td>\n                                                            <td>\n                                                                <button class=\"btn btn-raised btn-secondary\"\n                                                                        (click)=\"viewOrder(notification)\"\n                                                                        type=\"button\">\n                                                                    <em class=\"fa fa-eye\"></em>\n                                                                </button>\n                                                            </td>\n                                                        </tr>\n                                                        </tbody>\n                                                    </table>\n                                                    <pagination-controls\n                                                            (pageChange)=\"pageChanged($event)\"></pagination-controls>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </section>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import { RouterModule, Routes } from \"@angular/router\";\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { NotificationListComponent } from \"./notification-list.component\";\nimport { NotificationService } from \"./notification.service\";\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\nimport { CustomLoader } from \"../custom-loader\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: \"\",\n\t\tcomponent: NotificationListComponent,\n\t},\n];\n\n@NgModule({\n\timports: [CommonModule, FormsModule, RouterModule.forChild(routes), TranslateModule.forChild({\n\t\tloader: {\n\t\t\tprovide: TranslateLoader,\n\t\t\tuseClass: CustomLoader,\n\t\t\tdeps: [HttpClient]\n\t\t}\n\t}),\n\t\tNgxPaginationModule\n\t],\n\tdeclarations: [NotificationListComponent],\n\tproviders: [NotificationService],\n\texports: [RouterModule],\n})\nexport class NotificationListModule {\n}\n"],"sourceRoot":"webpack:///"}